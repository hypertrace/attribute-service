name: Build and test
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  release:
    types: 
      - created
jobs:
  build-and-test:
    strategy:
      matrix:
        docker-version: [19.03]
    runs-on: ubuntu-latest
    name: Build and run Docker images
    steps:
      - name: Update Packages
        run: sudo apt-get update -yqq --fix-missing
      - name: Install Docker
        uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: ${{ matrix.docker-version }}
          docker_buildx: false
      # A workflow can access and restore a cache created in the current branch,
      # the base branch (including base branches of forked repositories), or the default branch (usually main). 
      # For example, a cache created on the default branch would be accessible from any pull request.
      # for more information: https://docs.github.com/en/free-pro-team@latest/actions/guides/caching-dependencies-to-speed-up-workflows
      # GitHub will remove any cache entries that have not been accessed in over 7 days. 
      # There is no limit on the number of caches you can store, but the total size of all caches in a repository is limited to 5 GB.
      # Note: GitHub Actions does not have an equivalent of CircleCIâ€™s Docker Layer Caching (or DLC).
      - name: Cache docker
        uses: actions/cache@v2
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: ${{ runner.os }}-docker
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew clean build jacocoTestReport
      - name: Integration test
        run: ./gradlew clean build jacocoIntegrationTestReport
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          name: codecov-line-smoothing
          fail_ci_if_error: true
          verbose: true
          flags: integration
      - name: push docker image
        if: github.event.pull_request.merged == true
        run: ./gradlew dockerPushImages
        env:
          # DOCKERHUB_USER=<typically hypertrace>
          #   - login like this: echo "$DOCKERHUB_TOKEN"| docker login -u "$DOCKERHUB_USER" --password-stdin
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          # DOCKERHUB_TOKEN=<access token for DOCKERHUB_USER>
          #   -  Access Token from here https://hub.docker.com/settings/security
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}