name: Build and test
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  release:
    types: 
      - created
jobs:
  build-and-test:
    strategy:
      matrix:
        docker-version: [19.03]
    runs-on: ubuntu-20.04
    name: Build and run Docker images
    steps:
      - name: Update Packages
        run: sudo apt-get update -yqq --fix-missing
      # Difference here is remote-docker-setup in CircleCI vs Docker install in GH action
      # In CircleCI, When setup_remote_docker executes, a remote environment will be created, 
      # and your current primary container will be configured to use it. 
      # Then, any docker-related commands you use will be safely executed in this new environment.

      # In GH action, we can setup remote docker but then we have to host our own docker setup somewhere and SSH into that. 
      # Installing docker every time eats a bit of a time at the moment but 
      # A workflow can access and restore a cache created in the current branch,
      # the base branch (including base branches of forked repositories), or the default branch (usually main). 
      # For example, a cache created on the default branch would be accessible from any pull request.
      # for more information: https://docs.github.com/en/free-pro-team@latest/actions/guides/caching-dependencies-to-speed-up-workflows
      # GitHub will remove any cache entries that have not been accessed in over 7 days. 
      # There is no limit on the number of caches you can store, but the total size of all caches in a repository is limited to 5 GB.
      # Note: GitHub Actions does not have an equivalent of CircleCIâ€™s Docker Layer Caching (or DLC).
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          run: |
            find . -type f -name "*.gradle*" -o -name "gradle-wrapper*" | xargs shasum | sort > /tmp/checksum.txt && cat /tmp/checksum.txt 
            ./gradlew downloadDependecies
          path: ~/.gradle
          key: gradle-packages-${{ runner.os }}-${{ checksum "/tmp/checksum.txt" }}
          restore-keys: gradle-packages-${{ runner.os }}

      - name: Build with Gradle
        run: ./gradlew build dockerBuildImages

      - name: Unit test
        run: ./gradlew jacocoTestReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          name: codecov-line-smoothing
          fail_ci_if_error: true
          verbose: true
          flags: unit

      - name: Integration test
        run: ./gradlew jacocoIntegrationTestReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          name: codecov-line-smoothing
          fail_ci_if_error: true
          verbose: true
          flags: integration

      - name: push docker image
        if: github.event.pull_request.merged == true
        run: ./gradlew dockerPushImages
        env:
          # DOCKERHUB_USER=<typically hypertrace>
          #   - login like this: echo "$DOCKERHUB_TOKEN"| docker login -u "$DOCKERHUB_USER" --password-stdin
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          # DOCKERHUB_TOKEN=<access token for DOCKERHUB_USER>
          #   -  Access Token from here https://hub.docker.com/settings/security
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}